{
  "version": 3,
  "sources": ["../../creditcard.js/dist/creditcard.js"],
  "sourcesContent": ["/**\n * @name creditcard.js 3.0.22\n * @license MIT\n * @author ContaAzul (contaazul.com)\n */\n(function(g,f){typeof exports==='object'&&typeof module!=='undefined'?f(exports):typeof define==='function'&&define.amd?define(['exports'],f):(g=typeof globalThis!=='undefined'?globalThis:g||self,f(g.CreditCard={}));}(this,(function(exports){'use strict';var CARDS = [{\n  name: 'Banescard',\n  bins: /^(603182)[0-9]{10,12}/,\n  codeLength: 3\n}, {\n  name: 'Maxxvan',\n  bins: /^(603182)[0-9]{10,12}/,\n  codeLength: 3\n}, {\n  name: 'Cabal',\n  bins: /^(604324|604330|604337|604203|604338)[0-9]{10,12}/,\n  codeLength: 3\n}, {\n  name: 'GoodCard',\n  bins: /^(606387|605680|605674|603574)[0-9]{10,12}/,\n  codeLength: 3\n}, {\n  name: 'Elo',\n  bins: /^(401178|401179|431274|438935|451416|457393|457631|457632|504175|627780|636297|636368|(506699|5067[0-6]\\d|50677[0-8])|(50900\\d|5090[1-9]\\d|509[1-9]\\d{2})|65003[1-3]|(65003[5-9]|65004\\d|65005[0-1])|(65040[5-9]|6504[1-3]\\d)|(65048[5-9]|65049\\d|6505[0-2]\\d|65053[0-8])|(65054[1-9]|6505[5-8]\\d|65059[0-8])|(65070\\d|65071[0-8])|65072[0-7]|(6509[0-9])|(65165[2-9]|6516[6-7]\\d)|(65500\\d|65501\\d)|(65502[1-9]|6550[3-4]\\d|65505[0-8]))[0-9]{10,12}/,\n  codeLength: 3\n}, {\n  name: 'Diners',\n  bins: /^3(?:0[0-5]|[68][0-9])[0-9]{11}$/,\n  codeLength: 3\n}, {\n  name: 'Discover',\n  bins: /^6(?:011|5[0-9]{2}|4[4-9][0-9]{1}|(22(12[6-9]|1[3-9][0-9]|[2-8][0-9]{2}|9[01][0-9]|92[0-5]$)[0-9]{10}$))[0-9]{12}$/,\n  codeLength: 4\n}, {\n  name: 'Amex',\n  bins: /^3[47][0-9]{13}$/,\n  codeLength: 4\n}, {\n  name: 'Aura',\n  bins: /^50[0-9]{14,17}$/,\n  codeLength: 3\n}, {\n  name: 'Mastercard',\n  bins: /^(603136|603689|608619|606200|603326|605919|608783|607998|603690|604891|603600|603134|608718|603680|608710|604998)|(5[1-5][0-9]{14}|2221[0-9]{12}|222[2-9][0-9]{12}|22[3-9][0-9]{13}|2[3-6][0-9]{14}|27[01][0-9]{13}|2720[0-9]{12})$/,\n  codeLength: 3\n}, {\n  name: 'Visa',\n  bins: /^4[0-9]{12}(?:[0-9]{3})?$/,\n  codeLength: 3\n}, {\n  name: 'Hipercard',\n  bins: /^(38[0-9]{17}|60[0-9]{14})$/,\n  codeLength: 3\n}, {\n  name: 'JCB',\n  bins: /^(?:2131|1800|35\\d{3})\\d{11}$/,\n  codeLength: 3\n}];var MILLENNIUM = 1000;\nvar DEFAULT_CODE_LENGTH = 3;\nvar getCreditCardNameByNumber = function getCreditCardNameByNumber(number) {\n  return findCreditCardObjectByNumber(number).name || 'Credit card is invalid!';\n};\nvar isSecurityCodeValid = function isSecurityCodeValid(creditCardNumber, securityCode) {\n  var numberLength = getCreditCardCodeLengthByNumber(creditCardNumber);\n  return new RegExp(\"^[0-9]{\".concat(numberLength, \"}$\")).test(securityCode);\n};\nvar isExpirationDateValid = function isExpirationDateValid(month, year) {\n  return isValidMonth(month) && isValidYear(year) && isFutureOrPresentDate(month, year);\n};\nvar isValid = function isValid(number) {\n  var options = arguments.length > 1 && arguments[1] !== undefined ? arguments[1] : {};\n  var cards = options.cards;\n  var rawNumber = removeNonNumbersCaracteres(number);\n\n  if (hasSomeInvalidDigit(number) || !hasCorrectLength(rawNumber)) {\n    return false;\n  }\n\n  var sum = sumNumber(rawNumber);\n  return checkSum(sum) && validateCardsWhenRequired(number, cards);\n};\n\nfunction validateCardsWhenRequired(number, cards) {\n  return !cards || !cards.length || validateCards(number, cards);\n}\n\nfunction validateCards(number, cards) {\n  return areCardsSupported(cards) && cards.map(function (c) {\n    return c.toLowerCase();\n  }).includes(getCreditCardNameByNumber(number).toLowerCase());\n}\n\nfunction hasCorrectLength(number) {\n  return number && number.length <= 19;\n}\n\nfunction removeNonNumbersCaracteres(number) {\n  return number.replace(/\\D/g, '');\n}\n\nfunction hasSomeInvalidDigit(creditcardNumber) {\n  var invalidDigits = new RegExp('[^0-9- ]');\n  return invalidDigits.test(creditcardNumber);\n}\n\nfunction checkSum(sum) {\n  return sum > 0 && sum % 10 === 0;\n}\n\nfunction areCardsSupported(passedCards) {\n  var supportedCards = CARDS.map(function (c) {\n    return c.name.toLowerCase();\n  });\n  return passedCards.every(function (c) {\n    return supportedCards.includes(c.toLowerCase());\n  });\n}\n\nfunction findCreditCardObjectByNumber(number) {\n  if (!number) return {};\n  var numberOnly = number.replace(/[^\\d]/g, '');\n  return CARDS.find(function (card) {\n    return card.bins.test(numberOnly) && card;\n  }) || {};\n}\n\nfunction getCreditCardCodeLengthByNumber(number) {\n  return findCreditCardObjectByNumber(number).codeLength || DEFAULT_CODE_LENGTH;\n}\n\nfunction isValidMonth(month) {\n  return !isNaN(month) && month >= 1 && month <= 12;\n}\n\nfunction isValidYear(year) {\n  return !isNaN(year) && isValidFullYear(formatFullYear(year));\n}\n\nfunction formatFullYear(year) {\n  if (year.length === 2) return dateRange(year);\n  return year.length === 4 ? year : 0;\n}\n\nfunction dateRange() {\n  var increaseYear = arguments.length > 0 && arguments[0] !== undefined ? arguments[0] : 0;\n  var year = parseInt(increaseYear);\n  var today = new Date();\n  return Math.floor(today.getFullYear() / MILLENNIUM) * MILLENNIUM + year;\n}\n\nfunction isValidFullYear(year) {\n  return year >= dateRange() && year <= dateRange(MILLENNIUM);\n}\n\nfunction isFutureOrPresentDate(month, year) {\n  var fullYear = formatFullYear(year);\n  var currentDate = new Date();\n  var expirationDate = new Date();\n  currentDate.setFullYear(currentDate.getFullYear(), currentDate.getMonth(), 1);\n  expirationDate.setFullYear(fullYear, month - 1, 1);\n  return currentDate <= expirationDate;\n}\n\nfunction sumNumber(number) {\n  var computed = [0, 2, 4, 6, 8, 1, 3, 5, 7, 9];\n  var sum = 0;\n  var digit = 0;\n  var i = number.length;\n  var even = true;\n\n  while (i--) {\n    digit = Number(number[i]);\n    sum += (even = !even) ? computed[digit] : digit;\n  }\n\n  return sum;\n}exports.getCreditCardNameByNumber=getCreditCardNameByNumber;exports.isExpirationDateValid=isExpirationDateValid;exports.isSecurityCodeValid=isSecurityCodeValid;exports.isValid=isValid;Object.defineProperty(exports,'__esModule',{value:true});})));"],
  "mappings": "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",
  "names": ["exports", "getCreditCardNameByNumber", "isSecurityCodeValid", "isExpirationDateValid", "isValid"]
}
